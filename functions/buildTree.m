function [cTree] = buildTree(cHMM, iHMMused, cRiskfree, cSettings)
% buildTree builds a scenario tree and fills it with distributions
%                   
%   * builds Tree for optimization
%
%   Input:
%   cHMM:       structure of HMMs, generated by calibrateHMM
%   iHMMused:   integer of HMM used, as calculated by selectModel
%   cRiskfree:  structure of mean and variance of riskfree asset
%   cSettings:  structure of settings, as specified in Runtime.m
%
%   Output:
%   cTree:      structure of scenario tree

%% Input 
iNAssets = length(cSettings.Securities);
mdTransMatrix = cHMM(iHMMused).TransitionMatrix;  
iCurrentState = cHMM(iHMMused).ViterbiPath(end);
iStates = length(mdTransMatrix);
viStates = 1:iStates;
iSteps = length(cSettings.TimeVec)-1; 
viDt = diff(cSettings.TimeVec); % time difference in frequency specified in cSettings

% Initialize States, Probabilities
% time step i contains iStates^(i-1) nodes. Each node is in one state
miStates = nan(iStates^iSteps,iSteps+1);
mdProbabilities = nan(iStates^iSteps,iSteps+1);
miStates(1,1) = iCurrentState;
mdProbabilities(1,1) = 1;

%% Build States & Probabilities
for i=2:iSteps+1
   miStates(1:iStates^(i-1),i) = repmat(viStates', iStates^(i-2),1);
   tempTransMatrix=mdTransMatrix^(viDt(i-1)*12); 
       for j=1:iStates^(i-2)
           laststate = miStates(j,i-1);
           for k = 0:iStates-1
               currentstate = miStates(j*iStates-k,i);
               if currentstate == laststate
                   mdProbabilities(j*iStates-k,i) = tempTransMatrix(laststate,laststate) * mdProbabilities(j,i-1);
               else
                   mdProbabilities(j*iStates-k,i) = tempTransMatrix(laststate,currentstate) * mdProbabilities(j,i-1);
               end
           end
       end  
end

%% Build Tree
cTree = cell(iStates^iSteps,iSteps+1);
for i=1:iSteps +1
    for j=1:iStates^(i-1)
           cTree{j,i}.State = miStates(j,i);
           cTree{j,i}.Time = cSettings.TimeVec(i);
           cTree{j,i}.Probability = mdProbabilities(j,i);
           if i == iSteps +1
               cTree{j,i}.Distribution.Mu = [cRiskfree.Mu; cHMM(iHMMused).Mu(:,cTree{j,i}.State)];
               cTree{j,i}.Distribution.Sigma = [[cRiskfree.Sigma,  zeros(1,iNAssets)];[zeros(iNAssets,1),cHMM(iHMMused).Sigma(:,:,cTree{j,i}.State)]];
%                cTree{j,i}.Distribution.obj = gmdistribution(cTree{j,i}.Distribution.Mu', cTree{j,i}.Distribution.Sigma, 1);
           else
               weights = mdProbabilities(j*iStates-(iStates-1):j*iStates,i+1)/sum(mdProbabilities(j*iStates-(iStates-1):j*iStates,i+1));
               [vdMu, mdCovMat] = mixDistributions(weights, cHMM(iHMMused).Mu, cHMM(iHMMused).Sigma);
               cTree{j,i}.Distribution.Mu = [cRiskfree.Mu; vdMu];
               cTree{j,i}.Distribution.Sigma = [[cRiskfree.Sigma,  zeros(1,iNAssets)];[zeros(iNAssets,1),mdCovMat]];
%                cTree{j,i}.Distribution.obj = gmdistribution(cHMM(iHMMused).Mu', cHMM(iHMMused).Sigma, weights');
           end           
    end
end

end

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% This source code is part of RSMentalAccounting.
%
% Copyright(c) 2014 Felix Andresen
% All Rights Reserved.
%
% This program shall not be used, rewritten, or adapted as the basis of a commercial software
% or hardware product without first obtaining written permission of the author. The author make
% no representations about the suitability of this software for any purpose. It is provided
% "as is" without express or implied warranty.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Written by
%   Felix Andresen  
%   Master Thesis:  Regime Switching Models and the Mental Accounting Framework
%   Advisors:       Prof. Jan Vecer, Prof. Sebastien Lleo
%   Master of Science in Quantitative Finance, Frankfurt School of Finance and Management
%   Frankfurt am Main, Germany
%   02/2014
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Contact
%   E-mail: Felix.Andresen@gmail.com
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%